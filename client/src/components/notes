App COmment --
import React, {useState, useEffect} from 'react'
import axios from "axios"
import CommentList from "./CommentList"
import CommentForm from "./CommentForm"
import Comment from "./Comment"

function CommentSection(props){
  const publicState = {
    comments: [],
    loading: false,
    error:""
  }
  const [state, setPublicState] = useState(publicState)
  const {comments, loading} = state
  
const getComm = () => {
  axios.get('/api/todo')
  .then(res => setPublicState({
    comments:[...res.data],
    loading: false,
    error:""
  }))
  .catch(err => console.log(err))
}

  useEffect(() => {
getComm()
  }, [])
  
  console.log(comments)
  const addComment = comment => {
    axios.post("/api/todos/comments", comment)
    .then(res => setPublicState(prevState => ({
     comments: [...prevState, res.data],
     loading: false
    })))
    .catch(err =>  setPublicState({
      error: "Something went wrong while submitting form.",
      loading: false
    }))
     }
      
      const loadingSpin = loading ? 'App-logo Spin' : 'App-logo'
      console.log(comments)
      return (
    <div className="App container bg-light shadow">
    <header className="App-header">
      {/* <img src={logo} className={loadingSpin} alt="logo" /> */}
      <h1 className="App-title">
        React Comments
        <span className="px-2" role="img" aria-label="Chat">
          ðŸ’¬
        </span>
      </h1>
    </header>

    <div className="row">
      <div className="col-4  pt-3 border-right">
        <h6>Say something about React</h6>
        <CommentForm addComment={addComment} />
        {/* {comments.map((comment, index) => (
          <Comment key={index} comment={comment} />
          console.log(comment)
        ))} */}
      </div>
      <div className="col-8  pt-3 bg-white">
        <CommentList 
        loading={loading}
        comments={comments}
        />
      </div>
    </div>
  </div>
  )
}

export default CommentSection

Comments ---

import React from "react"

function Comment(props){
const {name, message, time} = props.comment

    return(
<div className="media mb-3">
      <img
        className="mr-3 bg-light rounded"
        width="48"
        height="48"
        src={`https://api.adorable.io/avatars/48/${name.toLowerCase()}@adorable.io.png`}
        alt={name}
      />

      <div className="media-body p-2 shadow-sm rounded bg-light border">
        <small className="float-right text-muted">{time}</small>
        <h6 className="mt-0 mb-1 text-muted">{name}</h6>
        {message}
      </div>
    </div>
    )
}

export default Comment

CommentForm ----
import React, { useState } from "react"
import axios from "axios"

function CommentForm(props) {
  const commFormState = {
    loading: false,
    error: "",
    comment:{
      name:"",
      message:""
    }
  }
  
  const [frmState, setFrmComment] = useState(commFormState)
  const {name, message} = frmState.comment
  const {loading, error}  = frmState

  const {addComment} = props


  //handleChange
  const handleFieldChange = e => {
    const { value, name } = e.target
    setFrmComment(prevState => ({
      comment:{
        ...prevState,
        [name]: value
      }
    }))
  }

  //place this last inside the onSubmit function
  // const isFormValid = () => {
  //   return state.comment.name !== "" && state.comment.message !== "";
  // }
 

  const isFormValid = () => {
    return name !== "" && message !== "";
  }


  //Form Submit Handler
  const onSubmit = e => {
    //preven default
    e.preventDefault()

    if (!isFormValid()) {
      setFrmComment({ error: "All fields are required." });
      return;
    }

    // loading status and clear error
    setFrmComment({ error: "", loading: true });
//saving point: figure out how to post 
    // persist the comments on server
        if (error) {
          setFrmComment({ loading: false, error: error });
        } else {
          // add time return from api and push comment to parent state
          addComment(frmState.comment);

          // clear the message box
          setFrmComment({
            loading: false,
            comment: { ...frmState.comment, message: "" }
          });
        }
  
    isFormValid()
  }

  const renderError = () => {
    return error ? (
      <div className="alert alert-danger">{error}</div>
    ) : null
  }

  return (

    <form method="post" onSubmit={onSubmit}>
      <div className="form-group">
        <input
          onChange={handleFieldChange}
          value={name}
          className="form-control"
          placeholder="ðŸ˜Ž Your Name"
          name="name"
          type="text"
        />
      </div>

      <div className="form-group">
        <textarea
          onChange={handleFieldChange}
          value={message}
          className="form-control"
          placeholder="ðŸ¤¬ Your Comment"
          name="message"
          rows="5"
        />
      </div>

      {renderError()}

      <div className="form-group">
        <button disabled={loading} className="btn btn-primary">
          Comment âž¤
        </button>
      </div>
    </form>

  )
}

export default CommentForm

CommentList ---
import React from "react"
import Comment from "./Comment"

function CommentList(props){
  const {loading, comments} = props
    
    return(
        <div className="commentList">
        <h5 className="text-muted mb-4">
          <span className="badge badge-success">{comments.length}</span>{" "}
          Comment{comments.length > 0 ? "s" : ""}
        </h5>
  
        {comments.length === 0 && !loading ? (
          <div className="alert text-center alert-info">
            Be the first to comment
          </div>
        ) : null}
  
        {comments.map((comment, index) => (
          <Comment key={index} comment={comment} />
        ))}
      </div>
    )
}


 export default CommentList